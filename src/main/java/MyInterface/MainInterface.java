/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MyInterface;

import MyInterface.models.Temperature;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author lol
 */
public class MainInterface extends javax.swing.JFrame {
private static ChargerFromDB chargerFromDB ;
private static List<Temperature> temperature=new ArrayList<>();    

// Au chargement de l'interface
    public MainInterface() {
     
        initComponents();
        // charger tous les temperatures à partir de la table de base de donnees 
        chargerFromDB = new ChargerFromDB();
        temperature=chargerFromDB.getAllElements();
        // titre de l'interface 
        setTitle("temperature List from InfluxDB ");
        // charger le schema de la table au niveau de l'interface  
        DefaultTableModel model=(DefaultTableModel)tableResultat.getModel();
        Object[] row =new Object[2];
       // remplisage de table à partir la liste des objets Temperature
        for(Temperature t: temperature){
        row[0]=t.getOfficeName();
        row[1]=t.getValue();
        model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        officeName = new javax.swing.JLabel();
        TextRecherche = new javax.swing.JTextField();
        ButtonRecherche = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableResultat = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        officeName.setText("OfficeName");

        ButtonRecherche.setText("Chercher");
        ButtonRecherche.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ButtonRechercheMouseClicked(evt);
            }
        });

        tableResultat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "officeName", "value"
            }
        ));
        jScrollPane1.setViewportView(tableResultat);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(officeName)
                        .addGap(18, 18, 18)
                        .addComponent(TextRecherche, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(112, 112, 112))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(ButtonRecherche, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(162, 162, 162))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(officeName)
                    .addComponent(TextRecherche, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ButtonRecherche)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonRechercheMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonRechercheMouseClicked
       
        DefaultTableModel model=(DefaultTableModel)tableResultat.getModel();
        for( int i = model.getRowCount() - 1; i >= 0; i-- )
        {
            model.removeRow(i);
        }
        // charger les temperatures à partir de la table de base de donnees selon
        // officename saisie
        chargerFromDB = new ChargerFromDB();
        List<Temperature> temps=chargerFromDB.getElements(TextRecherche.getText().toString());
        //titre de l'interface 
        setTitle("temperature List from InfluxDB ");
        // remplisage de table à partir la liste des objets Temperature
        Object[] row =new Object[2];
        for(Temperature t: temps){
        row[0]=t.getOfficeName();
        row[1]=t.getValue();
        model.addRow(row);
        }
        
      
    }//GEN-LAST:event_ButtonRechercheMouseClicked
        
        
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
      
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            public void run() {
                new MainInterface().setVisible(true);
            
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton ButtonRecherche;
    private javax.swing.JTextField TextRecherche;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel officeName;
    private javax.swing.JTable tableResultat;
    // End of variables declaration//GEN-END:variables
}
